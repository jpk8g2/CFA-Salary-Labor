4-22-2019 7:52am EST
Uploaded the first version of the following files:
        • App.config
        • Calculator.cs
        • EmployeeSchedule.xml
        • EmployeeWage.xml
        • Program.cs
        
App.config will be used as a configuration file, holding file paths for both EmployeeSchedule.xml and EmployeeWage.xml
Calculator.cs holds the bulk of the code, calculating and storing data values such as Productivity Average and Sales Percent
Program.cs currently holds nothing as Calculator.cs is not finished
EmployeeSchedule.xml and EmployeeWage.xml are to be used as placeholder values for employees and hold testing information

TODO: Complete the calculation of Sales Percentage within Calculator.cs


4-23-2019 6:09pm EST
Updated the following files:
        • Calculator.cs
                ○ Added the calculation of Sales Percentage
                ○ Created a Start() function that sets the environment of the vairables
                        • Must be run daily to pull correct schedule from system
                ○ Now can pull a seperate schedule based on the day of the week
                ○ Added error catching against unset variables (division by zero, null reference pointer, etc)
        • EmployeeSchedule.xml
                ○ Added tags for Monday - Saturday for seperate daily schedules
        • EmployeeWage.xml
                ○ Updated employee information
        • Program.cs
                ○ Removed test code
                ○ User can now test code from Calculator.cs in the main function of Program.cs
                        • WARNING: EDIT THE CODE FROM 'Calculator.cs' AT YOUR OWN RISK

TODO: 
        • Add a GUI to help be more user friendly
        • Create a way to update the schedule of employees
        • Find and squash more bugs
        • Add more error catching
        
        
4-30-2019 8:12am EST
Created a new file:
        • Employee.cs
                ○ Now contains methods from Calculator.cs for easier management and neater code
                ○ New methods have been added to Employee.cs:
                        • public static XmlNodeList GetEmployeeWageList()
                        • public static XmlNodeList GetEmployeeScheduleList()
                ○ The following methods have been made public:
                        • public static string NameOfNode(XmlNode node)
                        • public static double WageOfNode(XmlNode node)
                        • public static int IdOfNode(XmlNode node)
                ○ The following methods have been moved:
                        • public static void Start()
                        • public static double FindWageOfEmployee(string nameOfEmployee)
                        • public static double FindWageOfEmployee(int id)
                        • public static string FindNameOfEmpoyee(int id)
                        • public static double FindEmployeeClockedIn(string nameOfEmployee)
                        • public static double FindEmployeeClockedIn(int id)
                        • public static string NameOfNode(XmlNode node)
                        • public static double WageOfNode(XmlNode node)
                        • public static int IdOfNode(XmlNode node)
                        • public static double TurnNodeIntoTime(XmlNode node)
                        
Updated the following files:
        • Program.cs:
                ○ Contains a new method: public static void WriteToLog(string text)
        • Calculator.cs:
                ○ Moved the aforementioned methods to Employee.cs
                
Misc.:
        • Added error prevention to previously unprotected methods
        • Updated some comments to be more relevant
        • Updated debugging:
                ○ Removed the instance variable: private static readonly boolean DEBUG
                ○ Added the following instance variables to Program.cs:
                        • private static readonly StreamWriter logWrite = File.AppendText(ConfigurationManager.AppSettings["LogPath"]);
                        • private static bool hasDate = false;
                ○ Debugging information now saved to a text file named log.txt through logWrite, appending text to the end of the file
                ○ Adds the date of information written, kept track by the instance variable hasDate
                
TODO:
        • Add a GUI to help be more user friendly
        • Create a way to update the schedule of employees
        • Implement better implementation of a date for debugging information in the log file
        • Add comments for methods and instance variables without
        • Possibly add delegates to make code look neater and more efficient
